OnPlayerBodyPropertiesChanged();
OnBarterablesRequested(BarterData args);
OnHeroLevelledUp(Hero hero, bool shouldNotify = true);
OnHeroGainedSkill(Hero hero, SkillObject skill, int change = 1, bool shouldNotify = true);
OnCharacterCreationIsOver();
OnHeroCreated(Hero hero, bool isBornNaturally = false);
OnHeroOccupationChanged(Hero hero, Occupation oldOccupation);
OnHeroWounded(Hero woundedHero);
OnBarterAccepted(Hero offererHero, Hero otherHero, List<Barterable> barters);
OnBarterCanceled(Hero offererHero, Hero otherHero, List<Barterable> barters);
OnHeroRelationChanged(Hero effectiveHero, Hero effectiveHeroGainedRelationWith, int relationChange, bool showNotification, ChangeRelationAction.ChangeRelationDetail detail, Hero originalHero, Hero originalGainedRelationWith);
OnQuestLogAdded(QuestBase quest, bool hideInformation);
OnIssueLogAdded(IssueBase issue, bool hideInformation);
OnClanTierChanged(Clan clan, bool shouldNotify = true);
OnClanChangedKingdom(Clan clan, Kingdom oldKingdom, Kingdom newKingdom, ChangeKingdomAction.ChangeKingdomActionDetail detail, bool showNotification = true);
OnCompanionClanCreated(Clan clan);
OnHeroJoinedParty(Hero hero, MobileParty mobileParty);
OnHeroOrPartyTradedGold((Hero, PartyBase) giver, (Hero, PartyBase) recipient, (int, string) goldAmount, bool showNotification);
OnHeroOrPartyGaveItem((Hero, PartyBase) giver, (Hero, PartyBase) receiver, ItemObject item, int count, bool showNotification);
OnBanditPartyRecruited(MobileParty banditParty);
OnKingdomDecisionAdded(KingdomDecision decision, bool isPlayerInvolved);
OnKingdomDecisionCancelled(KingdomDecision decision, bool isPlayerInvolved);
OnKingdomDecisionConcluded(KingdomDecision decision, DecisionOutcome chosenOutcome, bool isPlayerInvolved);
OnPartyAttachedAnotherParty(MobileParty mobileParty);
OnNearbyPartyAddedToPlayerMapEvent(MobileParty mobileParty);
OnArmyCreated(Army army);
OnArmyDispersed(Army army, Army.ArmyDispersionReason reason, bool isPlayersArmy);
OnArmyGathered(Army army, Settlement gatheringSettlement);
OnPerkOpened(Hero hero, PerkObject perk);
OnPlayerTraitChanged(TraitObject trait, int previousLevel);
OnVillageStateChanged(Village village, Village.VillageStates oldState, Village.VillageStates newState, MobileParty raiderParty);
OnSettlementEntered(MobileParty party, Settlement settlement, Hero hero);
OnAfterSettlementEntered(MobileParty party, Settlement settlement, Hero hero);
OnMercenaryTroopChangedInTown(Town town, CharacterObject oldTroopType, CharacterObject newTroopType);
OnMercenaryNumberChangedInTown(Town town, int oldNumber, int newNumber);
OnAlleyOccupiedByPlayer(Alley alley, TroopRoster troops);
OnAlleyOwnerChanged(Alley alley, Hero newOwner, Hero oldOwner);
OnAlleyClearedByPlayer(Alley alley);
OnRomanticStateChanged(Hero hero1, Hero hero2, Romance.RomanceLevelEnum romanceLevel);
OnHeroesMarried(Hero hero1, Hero hero2, bool showNotification = true);
OnPlayerEliminatedFromTournament(int round, Town town);
OnPlayerStartedTournamentMatch(Town town);
OnTournamentStarted(Town town);
OnWarDeclared(IFaction faction1, IFaction faction2, DeclareWarAction.DeclareWarDetail declareWarDetail);
OnTournamentFinished(CharacterObject winner, MBReadOnlyList<CharacterObject> participants, Town town, ItemObject prize);
OnTournamentCancelled(Town town);
OnStartBattle(PartyBase attackerParty, PartyBase defenderParty, object subject, bool showNotification);
OnRebellionFinished(Settlement settlement, Clan oldOwnerClan);
TownRebelliousStateChanged(Town town, bool rebelliousState);
OnRebelliousClanDisbandedAtSettlement(Settlement settlement, Clan clan);
OnItemsLooted(MobileParty mobileParty, ItemRoster items);
OnMobilePartyDestroyed(MobileParty mobileParty, PartyBase destroyerParty);
OnMobilePartyCreated(MobileParty party);
OnHeroKilled(Hero victim, Hero killer, KillCharacterAction.KillCharacterActionDetail detail, bool showNotification = true);
OnBeforeHeroKilled(Hero victim, Hero killer, KillCharacterAction.KillCharacterActionDetail detail, bool showNotification = true);
OnChildEducationCompleted(Hero hero, int age);
OnHeroComesOfAge(Hero hero);
OnHeroGrowsOutOfInfancy(Hero hero);
OnHeroReachesTeenAge(Hero hero);
OnCharacterDefeated(Hero winner, Hero loser);
OnRulingClanChanged(Kingdom kingdom, Clan newRulingClan);
OnHeroPrisonerTaken(PartyBase capturer, Hero prisoner);
OnHeroPrisonerReleased(Hero prisoner, PartyBase party, IFaction capturerFaction, EndCaptivityDetail detail);
OnCharacterBecameFugitive(Hero hero);
OnPlayerMetHero(Hero hero);
OnPlayerLearnsAboutHero(Hero hero);
OnRenownGained(Hero hero, int gainedRenown, bool doNotNotify);
OnCrimeRatingChanged(IFaction kingdom, float deltaCrimeAmount);
OnNewCompanionAdded(Hero newCompanion);
OnAfterMissionStarted(IMission iMission);
OnGameMenuOpened(MenuCallbackArgs args);
AfterGameMenuOpened(MenuCallbackArgs args);
BeforeGameMenuOpened(MenuCallbackArgs args);
OnMakePeace(IFaction side1Faction, IFaction side2Faction, MakePeaceAction.MakePeaceDetail detail);
OnKingdomDestroyed(Kingdom destroyedKingdom);
OnKingdomCreated(Kingdom createdKingdom);
OnVillageBecomeNormal(Village village);
OnVillageBeingRaided(Village village);
OnVillageLooted(Village village);
OnCompanionRemoved(Hero companion, RemoveCompanionAction.RemoveCompanionDetail detail);
OnAgentJoinedConversation(IAgent agent);
OnConversationEnded(IEnumerable<CharacterObject> characters);
OnMapEventEnded(MapEvent mapEvent);
OnMapEventStarted(MapEvent mapEvent, PartyBase attackerParty, PartyBase defenderParty);
OnPrisonersChangeInSettlement(Settlement settlement,FlattenedTroopRoster prisonerRoster,Hero prisonerHero,bool takenFromDungeon);
OnPlayerBoardGameOver(Hero opposingHero,BoardGameHelper.BoardGameState state);
OnRansomOfferedToPlayer(Hero captiveHero);
OnRansomOfferCancelled(Hero captiveHero);
OnPeaceOfferedToPlayer(IFaction opponentFaction, int tributeAmount);
OnMarriageOfferedToPlayer(Hero suitor, Hero maiden);
OnMarriageOfferCanceled(Hero suitor, Hero maiden);
OnVassalOrMercenaryServiceOfferedToPlayer(Kingdom offeredKingdom);
OnVassalOrMercenaryServiceOfferCanceled(Kingdom offeredKingdom);
OnMissionStarted(IMission mission);
BeforeMissionOpened();
OnPartyRemoved(PartyBase party);
OnPartySizeChanged(PartyBase party);
OnSettlementOwnerChanged(Settlement settlement,bool openToClaim,Hero newOwner,Hero oldOwner,Hero capturerHero,ChangeOwnerOfSettlementAction.ChangeOwnerOfSettlementDetail detail);
OnGovernorChanged(Town fortification, Hero oldGovernor, Hero newGovernor);
OnSettlementLeft(MobileParty party, Settlement settlement);
WeeklyTick();
DailyTick();
DailyTickParty(MobileParty mobileParty);
DailyTickTown(Town town);
DailyTickSettlement(Settlement settlement);
DailyTickHero(Hero hero);
DailyTickClan(Clan clan);
CollectAvailableTutorials(ref List<CampaignTutorial> tutorials);
OnTutorialCompleted(string tutorial);
OnBuildingLevelChanged(Town town, Building building, int levelChange);
HourlyTick();
HourlyTickParty(MobileParty mobileParty);
HourlyTickSettlement(Settlement settlement);
HourlyTickClan(Clan clan);
Tick(float dt);
OnSessionStart(CampaignGameStarter campaignGameStarter);
OnAfterSessionStart(CampaignGameStarter campaignGameStarter);
OnNewGameCreated(CampaignGameStarter campaignGameStarter);
OnGameEarlyLoaded(CampaignGameStarter campaignGameStarter);
OnGameLoaded(CampaignGameStarter campaignGameStarter);
OnGameLoadFinished();
AiHourlyTick(MobileParty party, PartyThinkParams partyThinkParams);
TickPartialHourlyAi(MobileParty party);
OnPartyJoinedArmy(MobileParty mobileParty);
OnPartyRemovedFromArmy(MobileParty mobileParty);
OnArmyLeaderThink(Hero hero, Army.ArmyLeaderThinkReason reason);
OnMissionEnded(IMission mission);
QuarterDailyPartyTick(MobileParty mobileParty);
OnPlayerBattleEnd(MapEvent mapEvent);
OnUnitRecruited(CharacterObject character, int amount);
OnChildConceived(Hero mother);
OnGivenBirth(Hero mother, List<Hero> aliveChildren, int stillbornCount);
MissionTick(float dt);
SetupPreConversation();
OnArmyOverlaySetDirty();
OnPlayerDesertedBattle(int sacrificedMenCount);
OnPartyVisibilityChanged(PartyBase party);
TrackDetected(Track track);
TrackLost(Track track);
LocationCharactersAreReadyToSpawn(Dictionary<string, int> unusedUsablePointCount);
LocationCharactersSimulated();
OnPlayerUpgradedTroops(CharacterObject upgradeFromTroop, CharacterObject upgradeToTroop, int number);
OnHeroCombatHit(CharacterObject attackerTroop, CharacterObject attackedTroop, PartyBase party, WeaponComponentData usedWeapon, bool isFatal, int xp);
OnCharacterPortraitPopUpOpened(CharacterObject character);
OnCharacterPortraitPopUpClosed();
OnPlayerStartTalkFromMenu(Hero hero);
OnGameMenuOptionSelected(GameMenuOption gameMenuOption);
OnPlayerStartRecruitment(CharacterObject recruitTroopCharacter);
OnBeforePlayerCharacterChanged(Hero oldPlayer, Hero newPlayer);
OnPlayerCharacterChanged(Hero oldPlayer, Hero newPlayer, MobileParty newMainParty, bool isMainPartyChanged);
OnClanLeaderChanged(Hero oldLeader, Hero newLeader);
OnSiegeEventStarted(SiegeEvent siegeEvent);
OnPlayerSiegeStarted();
OnSiegeEventEnded(SiegeEvent siegeEvent);
OnSiegeAftermathApplied(MobileParty attackerParty, Settlement settlement, SiegeAftermathAction.SiegeAftermath aftermathType, Clan previousSettlementOwner,  Dictionary<MobileParty, float> partyContributions);
OnSiegeBombardmentHit(MobileParty besiegerParty, Settlement besiegedSettlement, BattleSideEnum side, SiegeEngineType weapon, SiegeBombardTargets target);
OnSiegeBombardmentWallHit(MobileParty besiegerParty, Settlement besiegedSettlement, BattleSideEnum side, SiegeEngineType weapon, bool isWallCracked);
OnSiegeEngineDestroyed(MobileParty besiegerParty, Settlement besiegedSettlement, BattleSideEnum side, SiegeEngineType destroyedEngine);
OnTradeRumorIsTaken(List<TradeRumor> newRumors, Settlement sourceSettlement = null);
OnCheckForIssue(Hero hero);
OnIssueUpdated(IssueBase issue, IssueBase.IssueUpdateDetails details, Hero issueSolver = null);
OnTroopsDeserted(MobileParty mobileParty, TroopRoster desertedTroops);
OnTroopRecruited(Hero recruiterHero, Settlement recruitmentSettlement, Hero recruitmentSource, CharacterObject troop, int amount);
OnTroopGivenToSettlement(Hero giverHero, Settlement recipientSettlement, TroopRoster roster);
OnItemSold(PartyBase receiverParty, PartyBase payerParty, ItemRosterElement itemRosterElement, int number, Settlement currentSettlement);
OnCaravanTransactionCompleted(MobileParty caravanParty, Town town, List<(EquipmentElement, int)> itemRosterElements);
OnPrisonerSold(MobileParty party, TroopRoster prisoners, Settlement currentSettlement);
OnPartyDisbandStarted(MobileParty disbandParty);
OnPartyDisbanded(MobileParty disbandParty, Settlement relatedSettlement);
OnPartyDisbandCanceled(MobileParty disbandParty);
OnHideoutSpotted(PartyBase party, PartyBase hideoutParty);
OnHideoutDeactivated(Settlement hideout);
OnHeroSharedFoodWithAnother(Hero supporterHero, Hero supportedHero, float influence);
OnPlayerInventoryExchange(List<(ItemRosterElement, int)> purchasedItems,  List<(ItemRosterElement, int)> soldItems, bool isTrading);
OnItemsDiscardedByPlayer(ItemRoster discardedItems);
OnPersuasionProgressCommitted(Tuple<PersuasionOptionArgs, PersuasionOptionResult> progress);
OnQuestCompleted(QuestBase quest, QuestBase.QuestCompleteDetails detail);
OnQuestStarted(QuestBase quest);
OnItemProduced(ItemObject itemObject, Settlement settlement, int count);
OnItemConsumed(ItemObject itemObject, Settlement settlement, int count);
OnPartyConsumedFood(MobileParty party);
OnBeforeMainCharacterDied(      Hero victim,      Hero killer,      KillCharacterAction.KillCharacterActionDetail detail,      bool showNotification = true);
OnNewIssueCreated(IssueBase issue);
OnIssueOwnerChanged(IssueBase issue, Hero oldOwner);
OnGameOver();
SiegeCompleted(Settlement siegeSettlement,MobileParty attackerParty,bool isWin,MapEvent.BattleTypes battleType);
SiegeEngineBuilt(SiegeEvent siegeEvent,BattleSideEnum side,SiegeEngineType siegeEngineType);
RaidCompleted(BattleSideEnum winnerSide, RaidEventComponent raidEvent);
ForceVolunteersCompleted(BattleSideEnum winnerSide,ForceVolunteersEventComponent forceVolunteersEvent);
ForceSuppliesCompleted(BattleSideEnum winnerSide,ForceSuppliesEventComponent forceSuppliesEvent);
OnHideoutBattleCompleted(BattleSideEnum winnerSide, MapEvent mapEvent);
OnClanDestroyed(Clan destroyedClan);
OnNewItemCrafted(ItemObject itemObject,TaleWorlds.Core.Crafting.OverrideData overrideData,bool isCraftingOrderItem);
CraftingPartUnlocked(CraftingPiece craftingPiece);
OnWorkshopChanged(Workshop workshop, Hero oldOwner, WorkshopType oldType);
OnBeforeSave();
OnSaveStarted();
OnSaveOver(bool isSuccessful, string saveName);
OnPrisonerTaken(FlattenedTroopRoster roster);
OnPrisonerReleased(FlattenedTroopRoster roster);
OnMainPartyPrisonerRecruited(FlattenedTroopRoster roster);
OnPrisonerDonatedToSettlement(MobileParty donatingParty, FlattenedTroopRoster donatedPrisoners, Settlement donatedSettlement);
OnEquipmentSmeltedByHero(Hero hero, EquipmentElement smeltedEquipmentElement);
OnPlayerTradeProfit(int profit);
OnHeroChangedClan(Hero hero, Clan oldClan);
OnHeroGetsBusy(Hero hero, HeroGetsBusyReasons heroGetsBusyReason);
CollectLoots(MapEvent mapEvent, PartyBase party, Dictionary<PartyBase, ItemRoster> loot, ItemRoster rosterToReceiveLoot, MBList<TroopRosterElement> lootedCasualties, float lootAmount);
OnLootDistributedToParty(MapEvent mapEvent, PartyBase party, Dictionary<PartyBase, ItemRoster> loot);
OnHeroTeleportationRequested(Hero hero, Settlement targetSettlement, MobileParty targetParty, TeleportHeroAction.TeleportationDetail detail);
OnPartyLeaderChangeOfferCanceled(MobileParty party);
OnClanInfluenceChanged(Clan clan, float change);
OnPlayerPartyKnockedOrKilledTroop(CharacterObject strikedTroop);
OnPlayerEarnedGoldFromAsset(DefaultClanFinanceModel.AssetIncomeType incomeType, int incomeAmount);
OnMainPartyStarving();
OnPlayerJoinedTournament(Town town, bool isParticipant);
CanHeroLeadParty(Hero hero, ref bool result);
CanHeroMarry(Hero hero, ref bool result);
CanHeroEquipmentBeChanged(Hero hero, ref bool result);
CanBeGovernorOrHavePartyRole(Hero hero, ref bool result);
CanHeroDie(Hero hero, KillCharacterAction.KillCharacterActionDetail causeOfDeath, ref bool result);
CanHeroBecomePrisoner(Hero hero, ref bool result);
CanMoveToSettlement(Hero hero, ref bool result);
CanHaveQuestsOrIssues(Hero hero, ref bool result);
OnHeroUnregistered(Hero hero);

